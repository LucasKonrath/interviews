/**
 * Definition for a binary tree node.
 * function TreeNode(val, left, right) {
 *     this.val = (val===undefined ? 0 : val)
 *     this.left = (left===undefined ? null : left)
 *     this.right = (right===undefined ? null : right)
 * }
 */
/**
 * @param {TreeNode} root
 * @return {number[][]}
 */
var levelOrder = function(root) {
    
    if(!root){
        return [];
    }
    
    const resultArray = [];
    
    const queue = [root];
    
    while(queue.length){
        
        let length = queue.length;
        let count = 0;
        
        const currentLevel = [];
        
        while(count < length){
            
            let currentNode = queue.shift();
            
            currentLevel.push(currentNode.val);
            
            if(currentNode.left){
                queue.push(currentNode.left);
            }
            
            if(currentNode.right){
                queue.push(currentNode.right);
            }
            
            count++;
        }
        
        resultArray.push(currentLevel);
    }
    
    return resultArray;
};